package fitPeoAutomation;

import java.time.Duration;
import java.util.NoSuchElementException;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class FitPeoAutomation {

		    @SuppressWarnings("deprecation")
			public static void main(String[] args, WebDriver WebDriver) {
		        // Set up the path for ChromeDriver
		        System.setProperty("webdriver.chrome.driver", "path_to_your_chromedriver"); // Update this with your path

		        
		        ChromeOptions options = new ChromeOptions();
		        options.addArguments("--headless"); // Optional: Run in headless mode

		        // Initialize WebDriver
		        WebDriver driver = new ChromeDriver();
		        
		        try {
		            // Step 1: Navigate to FitPeo Homepage
		            driver.get("https://www.fitpeo.com");
		            driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		            driver.manage().window().maximize();

		            // Step 2: Navigate to the Revenue Calculator Page
		            WebElement revenueCalculatorLink = driver.findElement(By.linkText("Revenue Calculator"));
		            revenueCalculatorLink.click();

		            Duration java = null;
					// Step 3: Scroll down to the Slider section
		            WebDriverWait wait = new  WebDriverWait(WebDriver,java);
		            WebElement sliderSection = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("slider-section-id"))); // Adjust the ID accordingly
		            scrollToElement(driver, sliderSection);

		            // Step 4: Adjust the Slider to 820
		            WebElement slider = driver.findElement(By.id("slider-id")); // Adjust with the actual ID of the slider
		            moveSliderToValue(driver, slider, 820);

		            // Step 5: Update the Text Field to 560 and verify the slider moves accordingly
		            WebElement textField = driver.findElement(By.id("slider-textfield-id")); // Adjust the ID accordingly
		            textField.clear();
		            textField.sendKeys("560");
		            verifySliderValue(driver, slider, 560);

		        
		            WebElement cpt99091 = driver.findElement(By.id("cpt-99091"));
		            WebElement cpt99453 = driver.findElement(By.id("cpt-99453"));
		            WebElement cpt99454 = driver.findElement(By.id("cpt-99454"));
		            WebElement cpt99474 = driver.findElement(By.id("cpt-99474"));
		            cpt99091.click();
		            cpt99453.click();
		            cpt99454.click();
		            cpt99474.click();

		            // Step 7: Validate the Total Recurring Reimbursement value
		            WebElement totalReimbursement = driver.findElement(By.id("total-recurring-reimbursement-id")); // Adjust with actual ID
		            String reimbursementValue = totalReimbursement.getText();
		            if (reimbursementValue.equals("$110700")) {
		                System.out.println("Total Recurring Reimbursement is correct: " + reimbursementValue);
		            } else {
		                System.out.println("Total Recurring Reimbursement is incorrect. Actual value: " + reimbursementValue);
		            }

		        } catch (NoSuchElementException e) {
		            System.out.println("Element not found: " + e.getMessage());
		        } catch (WebDriverException e) {
		            System.out.println("WebDriver Exception: " + e.getMessage());
		        } catch (Exception e) {
		            System.out.println("An error occurred: " + e.getMessage());
		        } finally {
		            // Step 8: Close the driver
		            if (driver != null) {
		                driver.quit();
		                System.out.println("Browser closed successfully.");
		            }
		        }
		    }

		    // Method to scroll to an element
		    public static void scrollToElement(WebDriver driver, WebElement element) {
		        Actions actions = new Actions(driver);
		        actions.moveToElement(element).perform();
		    }

		    // Method to move the slider to a specific value
		    public static void moveSliderToValue(WebDriver driver, WebElement slider, int targetValue) {
		        Actions actions = new Actions(driver);
		        actions.clickAndHold(slider).moveByOffset(targetValue, 0).release().perform();
		    }

		    // Method to verify the slider value based on the input
		    public static void verifySliderValue(WebDriver driver, WebElement slider, int expectedValue) {
		        WebElement sliderValueText = driver.findElement(By.id("slider-value-text-id")); // Adjust with actual ID
		        String sliderValue = sliderValueText.getText();
		        if (sliderValue.equals(String.valueOf(expectedValue))) {
		            System.out.println("Slider value is correctly updated to: " + expectedValue);
		        } else {
		            System.out.println("Slider value mismatch. Expected: " + expectedValue + ", but found: " + sliderValue);
		        }
		    }
		}
